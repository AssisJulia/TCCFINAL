@page "/cadastro"

@using SAMMI.Domain.DTOs.Usuario.Response
@using SAMMI.Domain.DTOs.Usuario.Request;
@using System.Text.RegularExpressions
@using Newtonsoft.Json
@using System.Net

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Lilita+One&family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap" rel="stylesheet">

<RadzenNotification />

<RadzenRow Gap="0" Class="rz-m-2 rz-my-12 rz-mx-auto rz-border-radius-6 rz-shadow-10" Style="width: 100%; max-width: 800px;">
    <RadzenColumn Size="10" SizeMD="6">
        <RadzenCard Style="height: 100%; background-color: #28E1F6; align-content: center; text-align: center">
            <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H2" Style="color: white; font-family: 'Ubuntu', sans-serif;">Bem Vindo ao</RadzenText>
            <RadzenText TextStyle="TextStyle.DisplayH3" Style="color: white; font-family: 'Lilita One', sans-serif;">Sammi Games!</RadzenText>
            <RadzenImage Path="logoSammi.png" Style="width: 40%;" AlternateText="O Melhor Site de Jogos Educativos Infantis." />
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn Size="12" SizeMD="6">
        <RadzenCard Style="align-items: center">
            <RadzenText TextStyle="TextStyle.H5" TagName="TagName.H2" Style="color: black; font-family: 'Ubuntu', sans-serif; text-align: center">Cadastro</RadzenText>
            <RadzenTemplateForm Data="@usuarioAdicionarRequest" Submit="@((UsuarioAdicionarRequest request) => { Submit(); })">
                <RadzenStack>
                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12">
                            <RadzenFormField Text="Usuário" Variant="@variant" Style="width: 100%; font-family: 'Ubuntu', sans-serif;">
                                <ChildContent>
                                    <RadzenTextBox @bind-value="@usuarioAdicionarRequest.Nome" />
                                </ChildContent>
                                <End>
                                    <RadzenIcon Icon="account_circle" />
                                </End>
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>
                    
                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12">
                            <RadzenFormField Text="E-mail" Variant="@variant" Style="width: 100%; margin-left: 0; margin-right: 0; font-family: 'Ubuntu', sans-serif;">
                                <ChildContent>
                                    <RadzenTextBox Name="Email" @bind-Value="@usuarioAdicionarRequest.EmailLogin" />
                                </ChildContent>
                                <End>
                                    <RadzenIcon Icon="mail" />
                                </End>
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>

                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12">
                            <RadzenEmailValidator Component="Email" Text="Informe um e-mail válido" />
                        </RadzenColumn>
                    </RadzenRow>

                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12">
                            <RadzenFormField Text="Confirmar e-mail" Variant="@variant" Style="width: 100%; font-family: 'Ubuntu', sans-serif;">
                                <ChildContent>
                                    <RadzenTextBox Name="ConfirmarEmail" @bind-Value="@usuarioAdicionarRequest.EmailLoginConfirmacao" />
                                </ChildContent>
                                <End>
                                    <RadzenIcon Icon="mail" />
                                </End>
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>

                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12">
                            <RadzenEmailValidator Component="ConfirmarEmail" Text="Informe um e-mail válido" />
                            <RadzenCompareValidator Visible=@(!string.IsNullOrEmpty(usuarioAdicionarRequest.EmailLoginConfirmacao)) Value=@usuarioAdicionarRequest.EmailLogin Component="ConfirmarEmail" Text="Os e-mails precisam estar iguais" />
                        </RadzenColumn>
                    </RadzenRow>

                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12">
                            <RadzenFormField Text="Senha" Variant="@variant" Style="width: 100%; font-family: 'Ubuntu', sans-serif;">
                                <ChildContent>
                                    <RadzenPassword @bind-Value="@usuarioAdicionarRequest.Senha" />
                                </ChildContent>
                                <End>
                                    <RadzenIcon Icon="https" />
                                </End>
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>
                    <RadzenRow AlignItems="AlignItems.Center">
                        <RadzenColumn Size="12">
                            <RadzenFormField Text="Confirmar Senha" Variant="@variant" Style="width: 100%; font-family: 'Ubuntu', sans-serif;">
                                <ChildContent>
                                    <RadzenPassword @bind-Value="@usuarioAdicionarRequest.SenhaConfirmacao" />
                                </ChildContent>
                                <End>
                                    <RadzenIcon Icon="https" />
                                </End>
                            </RadzenFormField>
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
                    <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Text="Cadastrar" Style="background-color: #450AE5" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large" Text="Cancelar" Style="background-color: red; color: white" Click="@Cancel" />
                </RadzenStack>
            </RadzenTemplateForm>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>

@code {
    bool mostraSenha = false;
    bool mostraConfirmacaoSenha = false;

    AlertStyle alerttype; //Warning, Success, Info, Danger
    Variant variant = Variant.Outlined;

    UsuarioAdicionarRequest usuarioAdicionarRequest = new UsuarioAdicionarRequest();

    async void Submit()
    {
        if (string.IsNullOrEmpty(usuarioAdicionarRequest.Nome) || string.IsNullOrEmpty(usuarioAdicionarRequest.EmailLogin) || string.IsNullOrEmpty(usuarioAdicionarRequest.EmailLoginConfirmacao) || string.IsNullOrEmpty(usuarioAdicionarRequest.Senha) || string.IsNullOrEmpty(usuarioAdicionarRequest.SenhaConfirmacao))
        {
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Erro",
                    Detail = "Por favor, preencha todos os campos.",
                    Duration = 4000
                });
            return;
        }

        //StateHasChanged();

        var response = await HttpClient.PostAsJsonAsync("usuario", usuarioAdicionarRequest);
        if (response.StatusCode == HttpStatusCode.Created)
        {
            //var content = await response.Content.ReadAsStringAsync();

            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Sucesso",
                    Detail = "Usuário Registrado com Sucesso!!!",
                    Duration = 4000
                });

            NavigationManager.NavigateTo("/");
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
            NotificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Usuário existente",
                    Detail = errorContent,
                    Duration = 4000
                });
        }

        //StateHasChanged();
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }

    void HabilitaVerSenha()
    {
        mostraSenha = !mostraSenha;
    }

    void HabilitaVerConfirmacaoSenha()
    {
        mostraConfirmacaoSenha = !mostraConfirmacaoSenha;
    }
}